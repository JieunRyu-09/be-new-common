plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'kr.co.triphos'
version = '0.0.3-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    all*.exclude module: 'spring-boot-starter-logging'                                      // logback 충돌방지
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-crypto'                    // Spring Security - PasswordEncoder
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'    // logback 충돌방지
    }
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    /* JWT 관련 의존성 */
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // swagger
    implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'

    // Redis & Jedis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'redis.clients:jedis:6.0.0'

    // webSocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.security:spring-security-messaging'

    /* DB driver */
//	runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    implementation 'org.mybatis:mybatis:3.5.11'
    implementation 'org.mybatis:mybatis-spring:3.0.0'

    /* 기존 개발표준 */
    implementation 'commons-codec:commons-codec:1.16.0' // Apache Commons Codec (Base64 인코딩/디코딩)

    /* Excel */
    implementation 'org.apache.poi:poi:5.2.3'       // HSSF, XSSF 지원
    implementation 'org.apache.poi:poi-ooxml:5.2.3' // OOXML 지원

    // 필요 시 추가 (POI에서 수식을 평가할 때 사용)
    implementation 'org.apache.poi:poi-ooxml-schemas:4.1.2'
    implementation 'org.apache.xmlbeans:xmlbeans:5.2.0'

    /* reflections */
    implementation 'org.reflections:reflections:0.10.2'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    /* WebFlux */
    implementation("org.springframework.boot:spring-boot-starter-webflux")
}

tasks.named('test') {
    useJUnitPlatform()
}
